name: Pipeline for Main
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  docker_login:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

  build-and-push-users-api:
    runs-on: ubuntu-latest
    needs: docker_login
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push Docker image for Users API
      uses: docker/build-push-action@v2
      with:
          context: ./Backend/Services/Kwetter/Users.api
          push: true
          tags: ginotoch/userservice:latest

  build-and-push-tweet-api:
    runs-on: ubuntu-latest
    needs: docker_login
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push Docker image for Tweet API
      uses: docker/build-push-action@v2
      with:
          context: ./Backend/Services/Kwetter/Tweets.api
          push: true
          tags: ginotoch/tweetapi:latest

  build-and-push-followers-api:
    runs-on: ubuntu-latest
    needs: docker_login
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push Docker image for Followers API
      uses: docker/build-push-action@v2
      with:
          context: ./Backend/Services/Kwetter/Followers.api
          push: true
          tags: ginotoch/followersapi:latest

  build-and-push-gateway-api:
    runs-on: ubuntu-latest
    needs: docker_login
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push Docker image for Gateway API
      uses: docker/build-push-action@v2
      with:
          context: ./Backend/Services/Kwetter/Gateway.api
          push: true
          tags: ginotoch/gatewayapi:latest

  build-and-push-notifications-api:
    runs-on: ubuntu-latest
    needs: docker_login
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build and push Docker image for Notifications API
      uses: docker/build-push-action@v2
      with:
          context: ./Backend/Services/Kwetter/Notifications.api
          push: true
          tags: ginotoch/notificationsapi:latest

  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AGREEABLE_BUSH_0EFB41003 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "Frontend" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_AGREEABLE_BUSH_0EFB41003 }}
          action: "close"
