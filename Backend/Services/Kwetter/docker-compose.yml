version: '3.4'

services:
  gatewayapi:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: Gateway.api/Dockerfile
    ports:
    - "9000:8080"
    - "9000:9001"
    networks:
    - "proxybackend"

  followersapi:
    image: ${DOCKER_REGISTRY-}followersapi
    build:
      context: .
      dockerfile: Followers.api/Dockerfile
    ports:
    - "5200:8080"
    - "5201:5201"
    networks:
    - "proxybackend"

  tweetsapi:
    image: ${DOCKER_REGISTRY-}tweetsapi
    build:
      context: .
      dockerfile: Tweets.api/Dockerfile
    ports:
    - "5100:8080"
    - "5101:5101"
    environment:
    - OTEL_EXPORTER_OTLP_ENDPOINT=http://tweetsapi.dashboard:18889
    networks:
    - "proxybackend"

  usersapi:
      image: ${DOCKER_REGISTRY-}usersapi
      build:
         context: .
         dockerfile: Users.api/Dockerfile
      ports:
      - "5300:8080"
      - "5301:5301"
      networks:
      - "proxybackend"

  notificationsapi:
    image: ${DOCKER_REGISTRY-}notificationsapi
    build:
      context: .
      dockerfile: Notifications.api/Dockerfile
    ports:
      - "5400:8080"
      - "5401:5401"
    networks:
    - "proxybackend"
  
  tweetsdatabase:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: tweets_database
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_ENCRYPT: "0" 
    ports:
      - "1433:1433"
    volumes:
       - tweets_data:/var/opt/mssql
    networks:
    - "proxybackend"

  usersdatabase:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: users_database
    environment:
      SA_PASSWORD: "UserDatabase!Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_ENCRYPT: "0" 
    ports:
      - "1434:1433"
    volumes:
    - users_data:/var/opt/mssql
    networks:
    - "proxybackend"

  followersdatabase:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: followers_database
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1435:1433"
    volumes:
    - followers_data:/var/opt/mssql
    networks:
    - "proxybackend"

  accountsdatabase:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: accounts_database
    environment:
      SA_PASSWORD: "YourStrong!Passw0rdAccount"
      ACCEPT_EULA: "Y"
    ports:
      - "1436:1433"
    volumes:
    - accounts_data:/var/opt/mssql
    networks:
    - "proxybackend"

  kwetter-mq:
    image: rabbitmq:management
    container_name: KwetterRabbitMq
    hostname: kwetter-mq
    ports:
    - "5672:5672"  
    - "15672:15672" 
    # volumes:
    # - ./.containers/queue/data/:/var/lib/rabbitmq
    # - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - proxybackend

  accountsapi:
    image: ${DOCKER_REGISTRY-}accountsapi
    build:
      context: .
      dockerfile: Accounts.api/Dockerfile
    ports: 
        - "5500:8080"
        - "5501:5501"
    networks:
    - "proxybackend"


  tweetsapi-dashboard:
        image: "mcr.microsoft.com/dotnet/nightly/aspire-dashboard:latest"
        container_name: "tweet_dashboard"
        ports:
            - 18888:18888
        networks:
            - proxybackend

volumes:
  tweets_data:
    driver: local
  users_data:
    driver: local
  followers_data:
    driver: local
  accounts_data:
    driver: local

    
networks:
  proxybackend:
    name: proxybackend
    driver: bridge

