name: dockercompose8924130373880136804
services:
  followers.api:
    build:
      context: G:\School\S6\Code\Backend\Services\Kwetter
      dockerfile: Followers.api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: followersapi
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 5200
      published: "5200"
      protocol: tcp
    - mode: ingress
      target: 5201
      published: "5201"
      protocol: tcp
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Stock\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Stock\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  frontend:
    build:
      context: G:\School\S6\Code\frontend
      dockerfile: Dockerfile
    image: frontend
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    stdin_open: true
    tty: true
  gateway.api:
    build:
      context: G:\School\S6\Code\Backend\Services\Kwetter
      dockerfile: Gateway.api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: gatewayapi
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 5000
      published: "5000"
      protocol: tcp
    - mode: ingress
      target: 5001
      published: "5001"
      protocol: tcp
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Stock\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Stock\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  tweets.api:
    build:
      context: G:\School\S6\Code\Backend\Services\Kwetter
      dockerfile: Tweets.api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: tweetsapi
    networks:
      proxybackend: null
    ports:
    - mode: ingress
      target: 5100
      published: "5100"
      protocol: tcp
    - mode: ingress
      target: 5101
      published: "5101"
      protocol: tcp
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Stock\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Stock\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  proxybackend:
    name: proxybackend
    driver: bridge